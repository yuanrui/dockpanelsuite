<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category_Docking" xml:space="preserve">
    <value>停靠</value>
  </data>
  <data name="Category_DockingNotification" xml:space="preserve">
    <value>停靠通知</value>
  </data>
  <data name="Category_PropertyChanged" xml:space="preserve">
    <value>属性已更改</value>
  </data>
  <data name="DockAreaEditor_FloatCheckBoxText" xml:space="preserve">
    <value>(浮动)</value>
  </data>
  <data name="DockContentHandler_AutoHidePortion_OutOfRange" xml:space="preserve">
    <value>值超出范围。</value>
  </data>
  <data name="DockContentHandler_DockAreas_InvalidValue" xml:space="preserve">
    <value>无效值: DockAreas 的值和 DockState 冲突。</value>
  </data>
  <data name="DockContentHandler_DockPane_InvalidValue" xml:space="preserve">
    <value>窗格无效，检查当前窗格的 IsFloat 和 DockPanel 属性。</value>
  </data>
  <data name="DockContentHandler_FloatPane_InvalidValue" xml:space="preserve">
    <value>窗格无效. 检查当前窗格的 IsFloat 和 DockPanel 属性。</value>
  </data>
  <data name="DockContentHandler_IsFloat_InvalidValue" xml:space="preserve">
    <value>无效值，和 DockableAreas 属性冲突。</value>
  </data>
  <data name="DockContentHandler_SetDockState_InvalidState" xml:space="preserve">
    <value>停靠状态无效。</value>
  </data>
  <data name="DockContentHandler_SetDockState_NullPanel" xml:space="preserve">
    <value>停靠面板为空值。</value>
  </data>
  <data name="DockContentHandler_ShowHint_InvalidValue" xml:space="preserve">
    <value>Invalid value, check DockableAreas property.</value>
  </data>
  <data name="DockContentHandler_Show_InvalidBeforeContent" xml:space="preserve">
    <value>Invalid beforeContent, it must be contained by the pane.</value>
  </data>
  <data name="DockContentHandler_Show_InvalidDockState" xml:space="preserve">
    <value>Invalid DockState: Content can not be showed as "Unknown" or "Hidden".</value>
  </data>
  <data name="DockContentHandler_Show_InvalidPrevPane" xml:space="preserve">
    <value>The previous pane is invalid. It can not be null, and its docking state must not be auto-hide.</value>
  </data>
  <data name="DockContentHandler_Show_NullDockPanel" xml:space="preserve">
    <value>DockPanel can not be null.</value>
  </data>
  <data name="DockContentHandler_Show_NullPane" xml:space="preserve">
    <value>The Pane can not be null.</value>
  </data>
  <data name="DockContent_AllowEndUserDocking_Description" xml:space="preserve">
    <value>确定是否允许最终用户拖放停靠。</value>
  </data>
  <data name="DockContent_AutoHidePortion_Description" xml:space="preserve">
    <value>在自动隐藏模式下显示内容的尺寸。指定部分尺寸值 &lt; 1; 指定像素大小值 &gt;= 1.</value>
  </data>
  <data name="DockContent_CloseButton_Description" xml:space="preserve">
    <value>启用/禁用内容关闭按钮。</value>
  </data>
  <data name="DockContent_Constructor_InvalidForm" xml:space="preserve">
    <value>表单类型必须是 IDockContent.</value>
  </data>
  <data name="DockContent_DockAreas_Description" xml:space="preserve">
    <value>获取或设置一个值，用于允许DockPanel指定区域显示内容。</value>
  </data>
  <data name="DockContent_DockStateChanged_Description" xml:space="preserve">
    <value>当DockState属性的值发生更改时重现。</value>
  </data>
  <data name="DockContent_HideOnClose_Description" xml:space="preserve">
    <value>指示内容将被隐藏而不是被关闭。</value>
  </data>
  <data name="DockContent_ShowHint_Description" xml:space="preserve">
    <value>首次显示时所需的停靠状态。</value>
  </data>
  <data name="DockContent_TabPageContextMenu_Description" xml:space="preserve">
    <value>为停靠窗格选项卡条带显示上下文菜单。</value>
  </data>
  <data name="DockContent_TabText_Description" xml:space="preserve">
    <value>为停靠窗格显示选项卡文本，如果未设置，使用Text属性代替。</value>
  </data>
  <data name="DockContent_ToolTipText_Description" xml:space="preserve">
    <value>当鼠标悬停在选项卡上时显示的文本。</value>
  </data>
  <data name="DockHandler_TabPageContextMenuStrip_Description" xml:space="preserve">
    <value>Context menu displayed for the dock pane tab strip.</value>
  </data>
  <data name="DockIndicator_ToolTipText" xml:space="preserve">
    <value>按SHIFT键停靠在全侧面。</value>
  </data>
  <data name="DockPaneCaption_ToolTipAutoHide" xml:space="preserve">
    <value>自动隐藏</value>
  </data>
  <data name="DockPaneCaption_ToolTipClose" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="DockPaneCaption_ToolTipOptions" xml:space="preserve">
    <value>窗口位置</value>
  </data>
  <data name="DockPaneStrip_ToolTipWindowList" xml:space="preserve">
    <value>窗口列表</value>
  </data>
  <data name="DockPane_ActiveContent_InvalidValue" xml:space="preserve">
    <value>Invalid Content: ActiveContent must be one of the visible contents, or null if there is no visible content.</value>
  </data>
  <data name="DockPane_Constructor_NullContent" xml:space="preserve">
    <value>Invalid argument: Content can not be "null".</value>
  </data>
  <data name="DockPane_Constructor_NullDockPanel" xml:space="preserve">
    <value>Invalid argument: The content's DockPanel can not be "null".</value>
  </data>
  <data name="DockPane_DockTo_InvalidContainer" xml:space="preserve">
    <value>The specified container conflicts with the IsFloat property.</value>
  </data>
  <data name="DockPane_DockTo_NoPrevPane" xml:space="preserve">
    <value>The previous pane does not exist in the nested docking pane collection.</value>
  </data>
  <data name="DockPane_DockTo_NullContainer" xml:space="preserve">
    <value>The container can not be null.</value>
  </data>
  <data name="DockPane_DockTo_NullPrevPane" xml:space="preserve">
    <value>The previous pane can not be null when the nested docking pane collection is not empty.</value>
  </data>
  <data name="DockPane_DockTo_SelfPrevPane" xml:space="preserve">
    <value>The previous pane can not be itself.</value>
  </data>
  <data name="DockPane_FloatWindow_InvalidValue" xml:space="preserve">
    <value>FloatWindow property can not be set to "null" when DockState is DockState.Float.</value>
  </data>
  <data name="DockPane_SetContentIndex_InvalidContent" xml:space="preserve">
    <value>Invalid Content: Content not within the collection.</value>
  </data>
  <data name="DockPane_SetContentIndex_InvalidIndex" xml:space="preserve">
    <value>Invalid Index: The index is out of range.</value>
  </data>
  <data name="DockPane_SetDockState_InvalidState" xml:space="preserve">
    <value>The state for the dock pane is invalid.</value>
  </data>
</root>